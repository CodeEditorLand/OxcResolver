[workspace]
members = ["napi"]
resolver = "2"

[package]
name = "oxc_resolver"
version = "4.2.0"
authors = ["Boshen <boshenc@gmail.com>"]
categories = ["development-tools"]
edition = "2021"
homepage = "https://github.com/oxc-project/oxc-resolver"
include = ["/src", "/examples", "/benches"]
keywords = ["node", "resolve", "cjs", "esm", "enhanced-resolve"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/oxc-project/oxc-resolver"
rust-version = "1.74"
description = "ESM / CJS module resolution"

[lib]
doctest = false

[[bench]]
harness = false
name = "resolver"

[dependencies]
cfg-if = "1"
document-features = { version = "0.2.11", optional = true }
indexmap = { version = "2", features = ["serde"] }
json-strip-comments = "1"
once_cell = "1" # Use `std::sync::OnceLock::get_or_try_init` when it is stable.
papaya = "0.2.0"
rustc-hash = { version = "2" }
serde = { version = "1", features = ["derive"], optional = true } # derive for Deserialize from package.json
serde_json = { version = "1", features = ["preserve_order"], optional = true } # preserve_order: package_json.exports requires order such as `["require", "import", "default"]`
simdutf8 = { version = "0.1" }
thiserror = "2"
tracing = "0.1"

[dev-dependencies]
criterion2 = { version = "2.0.0", default-features = false }
normalize-path = { version = "0.2.1" }
rayon = { version = "1.10.0" }
vfs = "0.12.0" # for testing with in memory file system

[[example]]
name = "resolver"

[features]
codspeed = ["criterion2/codspeed"]
default = ["fs_cache"]
fs_cache = ["dep:serde", "dep:serde_json"]
package_json_raw_json_api = []
yarn_pnp = ["pnp"]

[lints]

[lints.clippy]
all = { level = "warn", priority = -1 }
cargo = { level = "warn", priority = -1 }
clone_on_ref_ptr = "warn"
dbg_macro = "warn"
doc_markdown = "allow"
empty_drop = "warn"
empty_structs_with_brackets = "warn"
exit = "warn"
filetype_is_file = "warn"
get_unwrap = "warn"
impl_trait_in_params = "warn"
module_name_repetitions = "allow"
multiple_crate_versions = "allow"
nursery = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
rc_buffer = "warn"
rc_mutex = "warn"
rest_pat_in_fully_bound_structs = "warn"
self_named_module_files = "warn" # "-Wclippy::mod_module_files"
todo = "warn"
undocumented_unsafe_blocks = "warn"
unimplemented = "warn"
unnecessary_safety_comment = "warn"

[package]
authors = ["Boshen <boshenc@gmail.com>"]
categories = ["development-tools"]
description = "ESM / CJS module resolution"
edition = "2024"
homepage = "https://github.com/oxc-project/oxc-resolver"
include = ["/src", "/examples", "/benches"]
keywords = ["node", "resolve", "cjs", "esm", "enhanced-resolve"]
license-file = "LICENSE"
name = "oxc_resolver"
readme = "README.md"
repository = "https://github.com/oxc-project/oxc-resolver"
rust-version = "1.85.0"
version = "4.0.1"

[package.metadata]

[package.metadata.docs]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[profile]

[profile.release]
codegen-units = 1
debug = false # set to `true` for debug information
lto = "fat"
opt-level = 3
panic = "abort" # Let it crash and force ourselves to write safe Rust.
strip = "symbols" # set to `false` for debug information

[workspace]
members = ["napi"]
resolver = "2"
