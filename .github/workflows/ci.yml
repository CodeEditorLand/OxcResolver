name: CI

permissions: {}

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - "**/*.md"
      - "!.github/workflows/ci.yml"
  push:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
      - "!.github/workflows/ci.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Test
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: windows-latest
          - os: ubuntu-latest
          - os: macos-14
    runs-on: ${{ matrix.os }}
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1
      - uses: oxc-project/setup-rust@cd82e1efec7fef815e2c23d296756f31c7cdc03d # v1.0.0
        with:
          save-cache: ${{ github.ref_name == 'main' }}
          cache-key: warm
      - uses: ./.github/actions/pnpm
      - run: cargo check --all-features --locked
      - run: cargo test --doc
      - run: cargo test --all-features
      - run: pnpm run build:debug && pnpm run test
        if: ${{ matrix.os  != 'windows-latest' }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1
      - uses: oxc-project/setup-rust@cd82e1efec7fef815e2c23d296756f31c7cdc03d # v1.0.0
        with:
          components: clippy rust-docs
      - run: cargo clippy --all-features --all-targets -- -D warnings
      - run: RUSTDOCFLAGS='-D warnings' cargo doc --no-deps --all-features
      - uses: crate-ci/typos@212923e4ff05b7fc2294a204405eec047b807138 # v1.29.9
        with:
          files: .

  wasm:
    name: Check Wasm
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1

      - uses: oxc-project/setup-rust@cd82e1efec7fef815e2c23d296756f31c7cdc03d # v1.0.0
        with:
          cache-key: wasm
          save-cache: ${{ github.ref_name == 'main' }}

      - name: Check
        run: |
          rustup target add wasm32-unknown-unknown
          cargo check --all-features --target wasm32-unknown-unknown

  wasi:
    name: Test wasi target
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1

      # Downgrade Rust 1.85.0 https://github.com/toyobayashi/emnapi/issues/136
      - name: Change to Rust 1.84.1
        run: |
          sed -i ${{ (runner.os == 'macOS' && '""') || '' }} -e 's/channel = ".*"/channel = "1.84.1"/g' rust-toolchain.toml
          sed -i ${{ (runner.os == 'macOS' && '""') || '' }} -e 's/profile = "default"/profile = "minimal"/g' rust-toolchain.toml
          cat rust-toolchain.toml
          rustup show
          rustup target add wasm32-wasip1-threads

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: wasi
          save-if: ${{ github.ref_name == 'main' }}

      - uses: ./.github/actions/pnpm

      - name: Build
        run: pnpm build --target wasm32-wasip1-threads

      - name: Test
        run: pnpm run test
        env:
          WASI_TEST: 1
